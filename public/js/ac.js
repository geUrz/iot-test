/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/ac.js":
/*!**********************!*\
  !*** ./src/js/ac.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst temp_sensor_F = document.querySelector(\".temp_sensor_F\")\r\nconst temp_sensor_C = document.querySelector(\".temp_sensor_C\")\r\nconst set_temp_h3_F = document.querySelector(\".set_temp_h3_F\")\r\n\r\nconst setTemp = document.querySelector(\".set_temp\")\r\nconst barra_divide = document.querySelector(\".barra_divide\")\r\n\r\nconst fa_temp = document.querySelector(\".fa-temperature-half\")\r\nconst fa_power = document.querySelector(\".fa-power-off\")\r\nconst circle_icon_power = document.querySelector(\".circle_icon_power\")\r\nconst circle_icon_temp = document.querySelector(\".circle_icon_temp\")\r\n\r\nconst toggle_cool = document.querySelector(\".toggle_cool\")\r\nconst toggle_circle_cool = document.querySelector(\".toggle_circle_cool\")\r\nconst toggle_fan = document.querySelector(\".toggle_fan\")\r\nconst toggle_circle_fan = document.querySelector(\".toggle_circle_fan\")\r\n\r\nconst status_temp_sensor_main = document.querySelector(\".status_temp_sensor_main\")\r\nconst status_temp_sensor_si = document.querySelector(\".status_temp_sensor_si\")\r\nconst status_temp_sensor_no = document.querySelector(\".status_temp_sensor_no\")\r\n            \r\nconst set_temp_footer = document.querySelector(\".set_temp_footer\")\r\nconst fa_temp_up = document.querySelector(\".fa-temp-up\")\r\nconst fa_temp_down = document.querySelector(\".fa-temp-down\")\r\n\r\nconst set_temp_main = document.querySelector(\".set_temp_main\")\r\nconst set_temp_box_F = document.querySelector(\".set_temp_box_F\")\r\nconst set_temp_box_C = document.querySelector(\".set_temp_box_C\")\r\nconst set_temp_btn_aceptar = document.querySelector(\".set_temp_btn_aceptar\")\r\nconst set_temp_btn_cancelar = document.querySelector(\".set_temp_btn_cancelar\")\r\n\r\n\r\n\r\n\r\n/*const temp_0 = document.querySelector(\"#display_temp0\");\r\nconst temp_1 = document.querySelector(\"#display_temp1\");\r\nconst temp_2 = document.querySelector(\"#display_temp2\");*/\r\n\r\n\r\n\r\n\r\n/*function update_values( temp1, temp2, temp3 ){\r\n    temp_0.innerHTML = (temp1);\r\n    temp_1.innerHTML = (temp2);\r\n    temp_2.innerHTML = (temp3);\r\n}\r\n\r\nfunction process_msg(topic, message){\r\n    if (topic == \"values\"){\r\n        var msg = message.toString();\r\n        var sp = msg.split(\",\");\r\n        var temp1 = sp[0];\r\n        var temp2 = sp[1];\r\n        var temp3 = sp[2];\r\n        update_values(temp1, temp2, temp3);\r\n    }\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n// Initialize a mqtt variable globally\r\n// const mqtt = require('mqtt')\r\n\r\n// connection option\r\nconst options = {\r\n    clean: true, // retain session\r\nconnectTimeout: 4000, // Timeout period\r\n// Authentication information\r\n//clientId: 'iot01',\r\n//username: 'emqx_test',\r\n//password: 'emqx_test',\r\nKeepalive: '60',\r\n}\r\n\r\n// Connect string, and specify the connection method by the protocol\r\n// ws Unencrypted WebSocket connection\r\n// wss Encrypted WebSocket connection\r\n// mqtt Unencrypted TCP connection\r\n// mqtts Encrypted TCP connection\r\n// wxs WeChat applet connection\r\n// alis Alipay applet connection\r\nconst connectUrl = 'ws://public.mqtthq.com:1883/mqtt'\r\nconst client = mqtt.connect(connectUrl, options)\r\n\r\nclient.on('connect', () => {\r\nconsole.log('Conectado con Exito')\r\n\r\nclient.subscribe('Casa_001/#', { qos: 0 }, (error) => {\r\n  if ( !error ){\r\n      console.log('Suscripción Exitosa')\r\n\r\n  }\r\n  else{\r\n      console.log('Suscripción Fallida')\r\n  }\r\n\r\n  \r\n})\r\n\r\nclient.publish('topic', 'message', (error) => {\r\n  console.log(error || 'Mensaje Enviado')\r\n})\r\n\r\n})\r\n\r\n\r\n\r\n/*function valueTemp(){\r\n  temp = process_msg(topic, message);\r\n  document.getElementById(\"display_temp\").innerHTML = temp;\r\n}\r\n\r\n\r\nvalueTemp();*/\r\n\r\nclient.on('reconnect', (error) => {\r\nconsole.log('Error al Reconectar:', error)\r\n})\r\n\r\nclient.on('error', (error) => {\r\nconsole.log('Error de Conexión:', error)\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/************************************\r\n\r\n                SET TEMP\r\n                INICIO\r\n\r\n *************************************/\r\n\r\n\r\n\r\n\r\n\r\n/************************************\r\n\r\n                SET TEMP\r\n                FINAL\r\n\r\n *************************************/\r\n\r\n/************************************\r\n\r\n            BOTON CENTRAL TEMP\r\n                INICIO\r\n\r\n *************************************/\r\n\r\n\r\nfunction ADD_ON_TEMP(){\r\n    circle_icon_temp.classList.add(\"box_shadown\")\r\n    fa_temp.classList.add(\"color\")\r\n}\r\n\r\nfunction REMOVE_ON_TEMP(){\r\n    circle_icon_temp.classList.remove(\"box_shadown\")\r\n    fa_temp.classList.remove(\"color\")\r\n}\r\n\r\n/************************************\r\n\r\n            BOTON CENTRAL TEMP\r\n                FINAL\r\n\r\n *************************************/\r\n\r\n /************************************\r\n\r\n            BOTON CENTRAL POWER\r\n                INICIO\r\n\r\n *************************************/\r\n\r\nvar idPower_Status\r\nfunction circle_icon_power_status(){\r\n    var id = document.getElementsByClassName(\"circle_icon_power\").id\r\n        if(id == 1){\r\n            document.getElementsByClassName(\"circle_icon_power\").id=0\r\n            idPower_Status = 0\r\n            console.log(\"Button Power\" + idPower_Status)\r\n\r\n            client.publish('Casa_001/Led1', 'off', (error) => {\r\n                console.log(error || 'Mensaje Enviado')\r\n            })\r\n        }\r\n        else{\r\n            document.getElementsByClassName(\"circle_icon_power\").id=1\r\n            idPower_Status = 1\r\n            console.log(\"Button Power\" + idPower_Status)\r\n\r\n            client.publish('Casa_001/Led1', 'on', (error) => {\r\n                console.log(error || 'Mensaje Enviado')\r\n            })\r\n        }\r\n}\r\n\r\nfunction ADD_ON_POWER(){\r\n    circle_icon_power.classList.add(\"box_shadown\", document.getElementsByClassName(\"circle_icon_power\").id=1)\r\n    fa_power.classList.add(\"color\")\r\n    idPower_Status = 1\r\n    \r\n}\r\n\r\nfunction REMOVE_ON_POWER(){\r\n    circle_icon_power.classList.remove(\"box_shadown\", document.getElementsByClassName(\"circle_icon_power\").id=0)\r\n    fa_power.classList.remove(\"color\")\r\n    idPower_Status = 0\r\n    \r\n}\r\n\r\ncircle_icon_power.addEventListener('click', () => {\r\n    circle_icon_power.classList.toggle(\"box_shadown\")\r\n    fa_power.classList.toggle(\"color\")\r\n    circle_icon_power_status()\r\n})\r\n\r\nstatus_temp_sensor_si.addEventListener('click', () => {\r\n    ADD_ON_POWER()\r\n    status_temp_sensor_main.classList.remove(\"status_temp_sensor_main_display\")\r\n\r\n    client.publish('Casa_001/Led1', 'on', (error) => {\r\n        console.log(error || 'Mensaje Enviado')\r\n    })\r\n})\r\n\r\nstatus_temp_sensor_no.addEventListener('click', () => {\r\n    REMOVE_ON_POWER()\r\n    status_temp_sensor_main.classList.remove(\"status_temp_sensor_main_display\")\r\n\r\n    client.publish('Casa_001/Led1', 'off', (error) => {\r\n        console.log(error || 'Mensaje Enviado')\r\n    })\r\n})\r\n\r\n\r\n /************************************\r\n\r\n            BOTON CENTRAL POWER\r\n                FINAL\r\n\r\n *************************************/\r\n\r\n\r\n/************************************\r\n\r\n            BOTON TOGGLE\r\n                INICIO\r\n\r\n *************************************/\r\n\r\n\r\nfunction ADD_MANUAL_TOGGLE(){\r\n    setTemp.classList.add(\"set_temp_hidde\")\r\n    barra_divide.classList.add(\"barra_divide_hidde\")\r\n    \r\n    toggle_cool.classList.add(\"toggle_box_off\");\r\n    toggle_circle_cool.classList.add(\"toggle_circle_off\");\r\n\r\n    circle_icon_temp.classList.add(\"circle_icon_hidde\")\r\n    circle_icon_power.classList.add(\"circle-icon-display\")\r\n}\r\n\r\nfunction REMOVE_MANUAL_TOGGLE(){\r\n    setTemp.classList.remove(\"set_temp_hidde\")\r\n    barra_divide.classList.remove(\"barra_divide_hidde\")\r\n\r\n    toggle_cool.classList.remove(\"toggle_box_off\");\r\n    toggle_circle_cool.classList.remove(\"toggle_circle_off\");\r\n    toggle_cool_status()\r\n\r\n    circle_icon_temp.classList.remove(\"circle_icon_hidde\")\r\n    circle_icon_power.classList.remove(\"circle-icon-display\")\r\n}\r\n\r\n\r\n\r\n/* function set_frio_manual_on(){\r\n    var frioManualOn = \"frioManualOn\"\r\n    localStorage.setItem(\"frio_manual\", frioManualOn)\r\n    console.log(frioManualOn)\r\n}\r\n\r\nfunction set_frio_manual_off(){\r\n    var frioManualOff = \"frioManualOff\"\r\n    localStorage.setItem(\"frio_manual\", frioManualOff)\r\n    console.log(frioManualOff)\r\n} */\r\n\r\n\r\nfunction status_temp_sensor_main_display(){\r\n    status_temp_sensor_main.classList.add(\"status_temp_sensor_main_display\")\r\n}\r\n\r\n\r\n\r\nvar idtoggle_Status = 0\r\nfunction toggle_cool_status(){\r\n    var id = document.getElementsByClassName(\"toggle_cool\").id\r\n    if(id == 1){\r\n        document.getElementsByClassName(\"toggle_cool\").id=0\r\n        idtoggle_Status = 0\r\n        console.log(\"If\" + idtoggle_Status)\r\n\r\n        //set_frio_manual_on()\r\n\r\n        \r\n\r\n    }\r\n    else{\r\n        document.getElementsByClassName(\"toggle_cool\").id=1\r\n        idtoggle_Status = 1\r\n        console.log(\"Else\" + idtoggle_Status)\r\n\r\n        //set_frio_manual_off()\r\n\r\n        status_temp_sensor_main_display()\r\n    \r\n\r\n    }\r\n}\r\n\r\n/* (() => {\r\n    var frioManual = localStorage.getItem(\"frio_manual\")\r\n\r\n    if(frioManual == \"frioManualOn\"){\r\n        ADD_MANUAL_TOGGLE()\r\n    }\r\n    else if(frioManual == \"frioManualOff\"){\r\n        REMOVE_MANUAL_TOGGLE()\r\n    }\r\n\r\n    \r\n})() */\r\n\r\n\r\n\r\ntoggle_cool.addEventListener('click', () =>{\r\n    setTemp.classList.toggle(\"set_temp_hidde\")\r\n    barra_divide.classList.toggle(\"barra_divide_hidde\")\r\n\r\n    toggle_cool.classList.toggle(\"toggle_box_off\");\r\n    toggle_circle_cool.classList.toggle(\"toggle_circle_off\");\r\n    toggle_cool_status()\r\n\r\n    circle_icon_temp.classList.toggle(\"circle_icon_hidde\")\r\n    circle_icon_power.classList.toggle(\"circle-icon-display\")\r\n\r\n    document.getElementsByClassName(\"circle_icon_power\").id=0\r\n\r\n})\r\n\r\ntoggle_fan.addEventListener('click', () => {\r\n    toggle_fan.classList.toggle(\"toggle_box_on\");\r\n    toggle_circle_fan.classList.toggle(\"toggle_circle_on\");\r\n})\r\n\r\n/************************************\r\n\r\n            BOTON TOGGLE\r\n                FINAL\r\n\r\n *************************************/\r\n\r\n\r\n/************************************\r\n\r\n            SET TEMP FOOTER\r\n                INICIO\r\n\r\n *************************************/\r\n\r\nset_temp_footer.addEventListener('click', () => {\r\n    set_temp_main.classList.add(\"set_temp_main_display\")\r\n\r\n    set_temp_box_F.innerHTML = set_temp_h3_F.innerHTML\r\n})\r\n\r\n\r\nvar i = 50\r\nfa_temp_up.addEventListener('click', () => {\r\n    fa_temp_up.classList.add(\"fa-temp-up-down-color\")\r\n\r\n    setTimeout(() => {\r\n        fa_temp_up.classList.remove(\"fa-temp-up-down-color\")\r\n    }, 150)\r\n\r\n    \r\n    set_temp_box_F.innerHTML = i += 2\r\n    \r\n})\r\n\r\n\r\nfa_temp_down.addEventListener('click', () => {\r\n    fa_temp_down.classList.add(\"fa-temp-up-down-color\")\r\n\r\n    setTimeout(() => {\r\n        fa_temp_down.classList.remove(\"fa-temp-up-down-color\")\r\n    }, 150)\r\n\r\n    set_temp_box_F.innerHTML= i -= 2\r\n\r\n})\r\n\r\n\r\nset_temp_btn_aceptar.addEventListener('click', () => {\r\n\r\n    set_temp_h3_F.innerHTML = set_temp_box_F.innerHTML\r\n\r\n    set_temp_main.classList.remove(\"set_temp_main_display\")\r\n\r\n     \r\n})\r\n\r\nset_temp_btn_cancelar.addEventListener('click', () => {\r\n\r\n    set_temp_main.classList.remove(\"set_temp_main_display\")\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n/****************************\r\n * \r\n ***       MQTT\r\n * \r\n*****************************/\r\n\r\n\r\nclient.on('message', (topic, message) => {\r\n    console.log('Mensaje Recibido:', topic, '=>' , message.toString())\r\n            //process_msg(topic, message);\r\n        \r\n    var msj = message.toString();\r\n    var msj1 = Math.trunc((msj * 9/5) + 32);\r\n    var msj2 = message.toString();\r\n\r\n    if(msj != \"on\" && msj != \"off\"){\r\n        temp_sensor_F.innerHTML = msj1;\r\n        temp_sensor_C.innerHTML = msj2;\r\n    }\r\n\r\n    var valueTemp = set_temp_h3_F.innerHTML.toString()\r\n    console.log(\"VALUE TEMP :\"  + valueTemp)\r\n    if(msj1 >= valueTemp && idtoggle_Status == 0){\r\n       \r\n        if(idtoggle_Status == 1){\r\n            \r\n        }\r\n        else{\r\n            ADD_ON_TEMP();\r\n            console.log(\"STATE BUTTON\" + idPower_Status);\r\n            client.publish('Casa_001/Led1', 'on', (error) => {\r\n            console.log(error || 'Mensaje Enviado')\r\n            });\r\n        }\r\n    }\r\n    else if(msj1 <= valueTemp && idtoggle_Status == 0){\r\n        REMOVE_ON_TEMP();\r\n        console.log(\"STATE BUTTON\" + idPower_Status);\r\n        client.publish('Casa_001/Led1', 'off', (error) => {\r\n            console.log(error || 'Mensaje Enviado')\r\n        });\r\n    }\r\n\r\n    /* if(idstatustoggleTemp0 == 1){\r\n        idstatustoggleTemp0 = 0;\r\n\r\n        if(idstatustoggleTemp0 == 0){\r\n            ADD_BUTTON_POWER();\r\n        }\r\n        \r\n    } */\r\n\r\n    if(msj1 <= valueTemp && msj == \"on\" && idtoggle_Status == 1){\r\n        ADD_BUTTON_POWER();\r\n        client.publish('Casa_001/Led1', 'on', (error) => {\r\n            console.log(error || 'Mensaje Enviado')\r\n            });\r\n    }\r\n\r\n    \r\n});\r\n\r\n/****************************\r\n *                          * \r\n *         MQTT           ***\r\n *                          *\r\n*****************************/\n\n//# sourceURL=webpack://node0/./src/js/ac.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/ac.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;